pipeline {
    agent any

    tools{
        maven "mvn"
    }

    stages {
        stage('Git Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/master']], extensions: [], userRemoteConfigs: [[credentialsId: 'GitHub', url: 'https://github.com/rahultiple31/simple-java-maven-app-may-24.git']])
            }
        }

        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean package'
            }
        }
        stage('Test') {
            steps {
                sh 'mvn test'
            }

            post { 
                always { 
                    junit '**/target/surefire-reports/TEST-com.mycompany.app.AppTest.xml'
                }
            }

        }

        stage('Build Docker Image') {
            steps {
                sh 'docker build -t java .'
            }
        }

        stage('DockerHub login & Image push to dockerhub') {
            steps {
                withCredentials([string(credentialsId: 'docker-hub', variable: 'docker_hub')]) {
                sh 'docker login -u rahultipledocker -p ${docker_hub}'
                }
            }
        }

        stage('Approval') {
            steps {
                input 'Approve Deployment to Production'
            }
        }

        stage('Deployment') {
            steps {
                echo 'dockerhub pull & deploy docker-compose/docker-conatiner'
            }
        }
    }

    post { 
        failure { 
            echo 'Failuer!'
            mail bcc: '', body: '${env.JOB_URL}', cc: '', from: '', replyTo: '', subject: 'Pipeline Failed: "${env.JOB_NAME} - Build ${env.BUILD_NUMBER}"', to: 'rahultiple1@gmail.com'
        }
        success { 
            echo 'success!'
            archiveArtifacts artifacts: '**/target/*.jar', onlyIfSuccessful: true
        }
    }

}
